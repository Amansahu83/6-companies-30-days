/*Submission is here:- https://leetcode.com/problems/shortest-unsorted-continuous-subarray/submissions/869923192/ */

class Solution {
public:
    int findUnsortedSubarray(vector<int>& nums) {
        int n=nums.size();
        int start=0;
        int end=0;
        
      vector<int>vec;
      vec=nums;
      sort(vec.begin(),vec.end());
      for(int i=0;i<n;i++)
      {
          if(nums[i]!=vec[i])
          {
              start=i;
              break;
          }
      }
       for(int i=n-1;i>=0;i--)
      {
          if(nums[i]!=vec[i])
          {
              end=i;
              break;
          }
      }
     if(start==0 && end==0)return 0;
     return end-start+1;

    }
};
